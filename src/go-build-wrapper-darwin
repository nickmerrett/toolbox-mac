#!/bin/bash
#
# Copyright © 2020 – 2024 Red Hat Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# macOS-specific go-build-wrapper

if [ "$#" -ne 7 ]; then
    echo "go-build-wrapper: wrong arguments" >&2
    echo "Usage: go-build-wrapper [SOURCE DIR]" >&2
    echo "                        [OUTPUT ROOT DIR]" >&2
    echo "                        [OUTPUT FILE]" >&2
    echo "                        [VERSION]" >&2
    echo "                        [C COMPILER]" >&2
    echo "                        [DYNAMIC LINKER]" >&2
    echo "                        [MIGRATION PATH FOR COREOS/TOOLBOX]" >&2
    exit 1
fi

if ! cd "$1"; then
    echo "go-build-wrapper: failed to enter source directory $1"
    exit 1
fi

tags=""
if [ "$7" = "true" ]; then
    tags="-tags migration_path_for_coreos_toolbox"
fi

# On macOS, we don't need the complex libc.so path resolution
# macOS uses dylib and dyld, which work differently than Linux

echo "Building for macOS with dyld: $6"
echo "PWD: $(pwd)"
echo "Go version: $(go version)"
echo "Tags: $tags"
echo "Output: $2/$3"
echo "Version: $4"

# Simple build for macOS without the Linux-specific linker flags
# shellcheck disable=SC2086
echo "Running: go build $tags -trimpath -ldflags \"-X github.com/containers/toolbox/pkg/version.currentVersion=$4\" -o \"$2/$3\""

go build \
        $tags \
        -trimpath \
        -ldflags "-X github.com/containers/toolbox/pkg/version.currentVersion=$4" \
        -o "$2/$3"

echo "Go build exit code: $?"

exit "$?"